// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id    String  @id @default(uuid())
  email String  @unique
  name  String?
  password String?
  provider    Provider
  streams     Stream[] 
  upvotes     Upvote[]
}

model Stream {
  id        String   @id @default(uuid())
  type      StreamType
  active    Boolean  @default(true)
  extractedId String?
  title     String   @default("")
  bigImg    String   @default("")
  smallImg  String   @default("") 
  url       String
  upVotes   Upvote[]
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  currentStream   CurrentStream?
}

model CurrentStream {
  id        String    @id
  streamId  String?    @unique
  stream    Stream?   @relation(fields: [streamId], references: [id])
}


model Upvote {
  id        String   @id @default(uuid())
  streamId  String
  userId    String
  user      User     @relation(fields: [userId], references: [id])  
  stream    Stream   @relation(fields: [streamId], references: [id], onDelete: Cascade)
  @@unique([streamId, userId])
}

enum StreamType {
  Youtube
  Spotify
}

enum Provider {
  GitHub
  Credentials
}